version: '3.8'

services:
  # Go API Service
  api:
    build:
      context: ../../
      dockerfile: deploy/docker/Dockerfile.api
      args:
        VERSION: ${VERSION:-dev}
        COMMIT: ${COMMIT:-unknown}
        DATE: ${DATE:-unknown}
    container_name: revenue-leak-api
    ports:
      - "8080:8080"
    env_file:
      - ../../.env.dev
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - revenue-leak-network
    healthcheck:
      test: ["/main", "--health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  # Python Workers Service
  workers:
    build:
      context: ../../
      dockerfile: deploy/docker/Dockerfile.workers
    container_name: revenue-leak-workers
    env_file:
      - ../../.env.dev
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      api:
        condition: service_healthy
    networks:
      - revenue-leak-network
    healthcheck:
      test: ["python", "-m", "agent", "--dry-run"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 30s

  # Database
  postgres:
    image: postgres:15-alpine
    container_name: revenue-leak-postgres
    environment:
      POSTGRES_DB: revenue_leak_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - revenue-leak-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Cache/Queue
  redis:
    image: redis:7-alpine
    container_name: revenue-leak-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - revenue-leak-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    command: redis-server --appendonly yes

volumes:
  postgres_data:
  redis_data:

networks:
  revenue-leak-network:
    driver: bridge